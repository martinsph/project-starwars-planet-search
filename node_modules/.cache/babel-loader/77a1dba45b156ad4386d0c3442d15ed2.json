{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Trybe/projetos_trybe/sd-012-project-starwars-planets-search/src/context/ApiProvider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ContextApi from './ContextApi';\n\nfunction ApiProvider({\n  children\n}) {\n  const [data, setData] = useState([]);\n  const [dataFilter, setDataFilter] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [filters, setFilters] = useState({\n    filterByName: {\n      name: ''\n    },\n    filterByNumericValues: [{\n      column: '',\n      comparison: '',\n      value: 0\n    }]\n  });\n  const context = {\n    data,\n    setData,\n    columns,\n    setColumns,\n    filters,\n    setFilters,\n    dataFilter,\n    setDataFilter\n  };\n\n  const fetchApi = async () => {\n    const url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n    const {\n      results\n    } = await fetch(url).then(response => response.json());\n    const columnsFilter = Object.keys(results[0]).filter(item => item !== 'residents');\n    setData(results);\n    setDataFilter(results);\n    setColumns(columnsFilter);\n  };\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n  useEffect(() => {\n    let aux = [...data];\n    const {\n      filterByNumericValues\n    } = filters;\n\n    const planetByValue = () => {\n      filterByNumericValues.forEach(({\n        column,\n        comparison,\n        value\n      }) => {\n        if (comparison === 'maior que') {\n          aux = aux.filter(planet => Number(planet[column]) > Number(value));\n          return setDataFilter(aux);\n        }\n\n        if (comparison === 'menor que') {\n          aux = aux.filter(planet => Number(planet[column]) < Number(value));\n          return setDataFilter(aux);\n        }\n\n        if (comparison === 'igual a') {\n          aux = aux.filter(planet => Number(planet[column]) === Number(value));\n          return setDataFilter(aux);\n        }\n      });\n    };\n\n    planetByValue();\n  }, [data, setDataFilter]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ContextApi.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nApiProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default ApiProvider;","map":{"version":3,"sources":["/home/pedro/Trybe/projetos_trybe/sd-012-project-starwars-planets-search/src/context/ApiProvider.js"],"names":["React","useState","useEffect","PropTypes","ContextApi","ApiProvider","children","data","setData","dataFilter","setDataFilter","columns","setColumns","filters","setFilters","filterByName","name","filterByNumericValues","column","comparison","value","context","fetchApi","url","results","fetch","then","response","json","columnsFilter","Object","keys","filter","item","aux","planetByValue","forEach","planet","Number","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ContextApi from './ContextApi';\n\nfunction ApiProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [dataFilter, setDataFilter] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [filters, setFilters] = useState({\n    filterByName: {\n      name: '',\n    },\n    filterByNumericValues: [\n      {\n        column: '',\n        comparison: '',\n        value: 0,\n      },\n    ],\n  });\n\n  const context = {\n    data,\n    setData,\n    columns,\n    setColumns,\n    filters,\n    setFilters,\n    dataFilter,\n    setDataFilter,\n  };\n\n  const fetchApi = async () => {\n    const url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n    const { results } = await fetch(url).then((response) => response.json());\n    const columnsFilter = Object.keys(results[0]).filter((item) => item !== 'residents');\n    setData(results);\n    setDataFilter(results);\n    setColumns(columnsFilter);\n  };\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  useEffect(() => {\n    let aux = [...data];\n    const { filterByNumericValues } = filters;\n    const planetByValue = () => {\n      filterByNumericValues.forEach(({ column, comparison, value }) => {\n        if (comparison === 'maior que') {\n          aux = aux.filter((planet) => Number(planet[column]) > Number(value));\n          return setDataFilter(aux);\n        }\n        if (comparison === 'menor que') {\n          aux = aux.filter((planet) => Number(planet[column]) < Number(value));\n          return setDataFilter(aux);\n        }\n        if (comparison === 'igual a') {\n          aux = aux.filter((planet) => Number(planet[column]) === Number(value));\n          return setDataFilter(aux);\n        }\n      });\n    };\n    planetByValue();\n  }, [data, setDataFilter]);\n\n  return (\n    <section>\n      <ContextApi.Provider value={ context }>\n        { children }\n      </ContextApi.Provider>\n    </section>\n  );\n}\n\nApiProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ApiProvider;\n"]},"metadata":{},"sourceType":"module"}