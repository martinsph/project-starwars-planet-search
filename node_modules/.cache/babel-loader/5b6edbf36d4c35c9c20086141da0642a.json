{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Trybe/projetos_trybe/sd-012-project-starwars-planets-search/src/components/FilterByNumericValues.jsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport ContextApi from '../context/ContextApi'; // import Input from './Input';\n\nconst compareOptions = ['maior que', 'menor que', 'igual a'];\nconst columnsOptions = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n\nconst FilterNumericValues = () => {\n  const {\n    data,\n    setDataFilter,\n    filters,\n    setFilters\n  } = useContext(ContextApi);\n  const [tempColumns, setTempColumns] = useState(columnsOptions); // const [FilterByValue, setFilterByValue] = useState(structure);\n\n  const handleChange = ({\n    target: {\n      name,\n      value\n    }\n  }) => {\n    setFilters({ ...filters,\n      filterByNumericValues: [...filters.filterByNumericValues, {\n        [name]: value\n      }]\n    });\n  };\n\n  const onClick = () => {\n    // if (column !== '' && comparison !== '' && value !== null) {\n    //   setFilters({\n    //     ...filters,\n    //     filterByNumericValues: [\n    //       ...filters.filterByNumericValues,\n    //       {\n    //         ...FilterByValue,\n    //       },\n    //     ],\n    //   });\n    setTempColumns(tempColumns.filter(item => item !== filters.column)); // setFilterByValue(structure);\n  };\n\n  useEffect(() => {\n    let aux = [...data];\n    const {\n      filterByNumericValues\n    } = filters;\n\n    const planetByValue = () => {\n      filterByNumericValues.forEach(({\n        column,\n        comparison,\n        value\n      }) => {\n        if (comparison === 'maior que') {\n          aux = aux.filter(planet => Number(planet[column]) > Number(value));\n          return setDataFilter(aux);\n        }\n\n        if (comparison === 'menor que') {\n          aux = aux.filter(planet => Number(planet[column]) < Number(value));\n          return setDataFilter(aux);\n        }\n\n        if (comparison === 'igual a') {\n          aux = aux.filter(planet => Number(planet[column]) === Number(value));\n          return setDataFilter(aux);\n        }\n      });\n    };\n\n    planetByValue();\n  }, [data, setDataFilter, filters]);\n  const {\n    value\n  } = filters;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"select\", {\n    textlabel: \"column\",\n    name: \"column\",\n    id: \"column-filter\" // value={ column }\n    ,\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, columnsOptions.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 43\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"select\", {\n    textlabel: \"comparison\",\n    name: \"comparison\",\n    id: \"comparison-filter\" // value={ comparison }\n    ,\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, compareOptions.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 43\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"input\", {\n    textlabel: \"value\",\n    name: \"value\",\n    id: \"value-filter\",\n    type: \"number\",\n    value: value,\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"button-filter\",\n    type: \"button\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"Filtrar\"));\n};\n\nexport default FilterNumericValues; // useEffect(() => {\n//   const planetByValues = () => {\n//     let aux = [...data];\n//     // console.log(allData);\n//     filterByNumericValues.forEach(() => {\n//       switch (comparison) {\n//       case 'maior que':\n//         aux = aux.filter((item) => (\n//           Number(item[column]) > value));\n//         setDataFilter(aux);\n//         break;\n//       case 'menor que':\n//         aux = aux.filter((item) => (\n//           Number(item[column]) < value));\n//         setDataFilter(aux);\n//         break;\n//       case 'igual a':\n//         aux = aux.filter((item) => (\n//           Number(item[column]) === value));\n//         setDataFilter(aux);\n//         break;\n//       default:\n//         break;\n//       }\n//     });\n//   };\n//   planetByValues();\n// }, [data, filters, setDataFilter, column, comparison, filterByNumericValues, value]);","map":{"version":3,"sources":["/home/pedro/Trybe/projetos_trybe/sd-012-project-starwars-planets-search/src/components/FilterByNumericValues.jsx"],"names":["React","useContext","useEffect","useState","ContextApi","compareOptions","columnsOptions","FilterNumericValues","data","setDataFilter","filters","setFilters","tempColumns","setTempColumns","handleChange","target","name","value","filterByNumericValues","onClick","filter","item","column","aux","planetByValue","forEach","comparison","planet","Number","e","map","option"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,UAAP,MAAuB,uBAAvB,C,CACA;;AAEA,MAAMC,cAAc,GAAG,CAAC,WAAD,EAAc,WAAd,EAA2B,SAA3B,CAAvB;AACA,MAAMC,cAAc,GAAG,CAAC,YAAD,EACrB,gBADqB,EAErB,UAFqB,EAGrB,iBAHqB,EAIrB,eAJqB,CAAvB;;AAMA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,aAAR;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA;AAAhC,MAA+CV,UAAU,CAACG,UAAD,CAA/D;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACG,cAAD,CAA9C,CAFgC,CAGhC;;AAEA,QAAMQ,YAAY,GAAG,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAV,GAAD,KAAiC;AACpDN,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETQ,MAAAA,qBAAqB,EAAE,CACrB,GAAGR,OAAO,CAACQ,qBADU,EAErB;AAAE,SAACF,IAAD,GAAQC;AAAV,OAFqB;AAFd,KAAD,CAAV;AAOD,GARD;;AAUA,QAAME,OAAO,GAAG,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,IAAAA,cAAc,CAACD,WAAW,CAACQ,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,KAAKX,OAAO,CAACY,MAA9C,CAAD,CAAd,CAXoB,CAYpB;AACD,GAbD;;AAeApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,GAAG,GAAG,CAAC,GAAGf,IAAJ,CAAV;AACA,UAAM;AAAEU,MAAAA;AAAF,QAA4BR,OAAlC;;AACA,UAAMc,aAAa,GAAG,MAAM;AAC1BN,MAAAA,qBAAqB,CAACO,OAAtB,CAA8B,CAAC;AAAEH,QAAAA,MAAF;AAAUI,QAAAA,UAAV;AAAsBT,QAAAA;AAAtB,OAAD,KAAmC;AAC/D,YAAIS,UAAU,KAAK,WAAnB,EAAgC;AAC9BH,UAAAA,GAAG,GAAGA,GAAG,CAACH,MAAJ,CAAYO,MAAD,IAAYC,MAAM,CAACD,MAAM,CAACL,MAAD,CAAP,CAAN,GAAyBM,MAAM,CAACX,KAAD,CAAtD,CAAN;AACA,iBAAOR,aAAa,CAACc,GAAD,CAApB;AACD;;AACD,YAAIG,UAAU,KAAK,WAAnB,EAAgC;AAC9BH,UAAAA,GAAG,GAAGA,GAAG,CAACH,MAAJ,CAAYO,MAAD,IAAYC,MAAM,CAACD,MAAM,CAACL,MAAD,CAAP,CAAN,GAAyBM,MAAM,CAACX,KAAD,CAAtD,CAAN;AACA,iBAAOR,aAAa,CAACc,GAAD,CAApB;AACD;;AACD,YAAIG,UAAU,KAAK,SAAnB,EAA8B;AAC5BH,UAAAA,GAAG,GAAGA,GAAG,CAACH,MAAJ,CAAYO,MAAD,IAAYC,MAAM,CAACD,MAAM,CAACL,MAAD,CAAP,CAAN,KAA2BM,MAAM,CAACX,KAAD,CAAxD,CAAN;AACA,iBAAOR,aAAa,CAACc,GAAD,CAApB;AACD;AACF,OAbD;AAcD,KAfD;;AAgBAC,IAAAA,aAAa;AACd,GApBQ,EAoBN,CAAChB,IAAD,EAAOC,aAAP,EAAsBC,OAAtB,CApBM,CAAT;AAsBA,QAAM;AAAEO,IAAAA;AAAF,MAAYP,OAAlB;AAEA,sBACE,uDACE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,EAAE,EAAC,eAHL,CAIE;AAJF;AAKE,IAAA,QAAQ,EAAImB,CAAD,IAAOf,YAAY,CAACe,CAAD,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQIvB,cAAc,CAACwB,GAAf,CAAoBC,MAAD,iBAAa;AAAQ,IAAA,GAAG,EAAGA,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,MAAxB,CAAhC,CARJ,CADF,eAYE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,EAAE,EAAC,mBAHL,CAIE;AAJF;AAKE,IAAA,QAAQ,EAAIF,CAAD,IAAOf,YAAY,CAACe,CAAD,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQIxB,cAAc,CAACyB,GAAf,CAAoBC,MAAD,iBAAa;AAAQ,IAAA,GAAG,EAAGA,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,MAAxB,CAAhC,CARJ,CAZF,eAuBE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,EAAE,EAAC,cAHL;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,KAAK,EAAGd,KALV;AAME,IAAA,QAAQ,EAAIY,CAAD,IAAOf,YAAY,CAACe,CAAD,CANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,eA+BE;AACE,mBAAY,eADd;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAGV,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA/BF,CADF;AAyCD,CA/FD;;AAiGA,eAAeZ,mBAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport ContextApi from '../context/ContextApi';\n// import Input from './Input';\n\nconst compareOptions = ['maior que', 'menor que', 'igual a'];\nconst columnsOptions = ['population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water'];\n\nconst FilterNumericValues = () => {\n  const { data, setDataFilter, filters, setFilters } = useContext(ContextApi);\n  const [tempColumns, setTempColumns] = useState(columnsOptions);\n  // const [FilterByValue, setFilterByValue] = useState(structure);\n\n  const handleChange = ({ target: { name, value } }) => {\n    setFilters({\n      ...filters,\n      filterByNumericValues: [\n        ...filters.filterByNumericValues,\n        { [name]: value },\n      ],\n    });\n  };\n\n  const onClick = () => {\n    // if (column !== '' && comparison !== '' && value !== null) {\n    //   setFilters({\n    //     ...filters,\n    //     filterByNumericValues: [\n    //       ...filters.filterByNumericValues,\n    //       {\n    //         ...FilterByValue,\n    //       },\n    //     ],\n    //   });\n    setTempColumns(tempColumns.filter((item) => item !== filters.column));\n    // setFilterByValue(structure);\n  };\n\n  useEffect(() => {\n    let aux = [...data];\n    const { filterByNumericValues } = filters;\n    const planetByValue = () => {\n      filterByNumericValues.forEach(({ column, comparison, value }) => {\n        if (comparison === 'maior que') {\n          aux = aux.filter((planet) => Number(planet[column]) > Number(value));\n          return setDataFilter(aux);\n        }\n        if (comparison === 'menor que') {\n          aux = aux.filter((planet) => Number(planet[column]) < Number(value));\n          return setDataFilter(aux);\n        }\n        if (comparison === 'igual a') {\n          aux = aux.filter((planet) => Number(planet[column]) === Number(value));\n          return setDataFilter(aux);\n        }\n      });\n    };\n    planetByValue();\n  }, [data, setDataFilter, filters]);\n\n  const { value } = filters;\n\n  return (\n    <>\n      <select\n        textlabel=\"column\"\n        name=\"column\"\n        id=\"column-filter\"\n        // value={ column }\n        onChange={ (e) => handleChange(e) }\n      >\n        {\n          columnsOptions.map((option) => (<option key={ option }>{option}</option>))\n        }\n      </select>\n      <select\n        textlabel=\"comparison\"\n        name=\"comparison\"\n        id=\"comparison-filter\"\n        // value={ comparison }\n        onChange={ (e) => handleChange(e) }\n      >\n        {\n          compareOptions.map((option) => (<option key={ option }>{option}</option>))\n        }\n      </select>\n      <input\n        textlabel=\"value\"\n        name=\"value\"\n        id=\"value-filter\"\n        type=\"number\"\n        value={ value }\n        onChange={ (e) => handleChange(e) }\n      />\n      <button\n        data-testid=\"button-filter\"\n        type=\"button\"\n        onClick={ onClick }\n      >\n        Filtrar\n      </button>\n    </>\n  );\n};\n\nexport default FilterNumericValues;\n\n// useEffect(() => {\n//   const planetByValues = () => {\n//     let aux = [...data];\n//     // console.log(allData);\n//     filterByNumericValues.forEach(() => {\n//       switch (comparison) {\n//       case 'maior que':\n//         aux = aux.filter((item) => (\n//           Number(item[column]) > value));\n//         setDataFilter(aux);\n//         break;\n//       case 'menor que':\n//         aux = aux.filter((item) => (\n//           Number(item[column]) < value));\n//         setDataFilter(aux);\n//         break;\n//       case 'igual a':\n//         aux = aux.filter((item) => (\n//           Number(item[column]) === value));\n//         setDataFilter(aux);\n//         break;\n//       default:\n//         break;\n//       }\n//     });\n//   };\n//   planetByValues();\n// }, [data, filters, setDataFilter, column, comparison, filterByNumericValues, value]);\n"]},"metadata":{},"sourceType":"module"}