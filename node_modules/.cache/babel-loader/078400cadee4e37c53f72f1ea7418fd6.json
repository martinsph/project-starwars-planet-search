{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Trybe/projetos_trybe/sd-012-project-starwars-planets-search/src/components/Table.jsx\";\nimport React, { useContext, useState } from 'react';\nimport ContextApi from '../context/ContextApi';\nimport FilterByName from './FilterByName';\nimport FilterByNumericValues from './FilterByNumericValues'; // import SortingColumns from './SortingColumns';\n\nconst auxiliar = ['Bespin', 'Yavin IV', 'Hoth', 'Kamino', 'Endor', 'Coruscant', 'Alderaan', 'Dagobah', 'Naboo', 'Tatooine'];\n\nfunction Table() {\n  const {\n    columns,\n    dataFilter,\n    setDataFilter\n  } = useContext(ContextApi); // const [sort, setSort] = useState(false);\n  // console.log(dataFilter);\n  // if (sort) {\n  //   setDataFilter(auxiliar);\n  // }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FilterByName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FilterByNumericValues, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, columns.map(item => /*#__PURE__*/React.createElement(\"th\", {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 37\n    }\n  }, item.replace('_', ' '))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, auxiliar.map((planet, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-testid\": \"planet-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, planet.name))))));\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/pedro/Trybe/projetos_trybe/sd-012-project-starwars-planets-search/src/components/Table.jsx"],"names":["React","useContext","useState","ContextApi","FilterByName","FilterByNumericValues","auxiliar","Table","columns","dataFilter","setDataFilter","map","item","replace","planet","index","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC,C,CACA;;AAEA,MAAMC,QAAQ,GAAG,CACf,QADe,EAEf,UAFe,EAGf,MAHe,EAIf,QAJe,EAKf,OALe,EAMf,WANe,EAOf,UAPe,EAQf,SARe,EASf,OATe,EAUf,UAVe,CAAjB;;AAYA,SAASC,KAAT,GAAiB;AACf,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,MAAyCT,UAAU,CAACE,UAAD,CAAzD,CADe,CAEf;AACA;AAEA;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIK,OAAO,CAACG,GAAR,CAAaC,IAAD,iBAAU;AAAI,IAAA,GAAG,EAAGA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,IAAI,CAACC,OAAL,CAAa,GAAb,EAAkB,GAAlB,CAAnB,CAAtB,CADJ,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIP,QAAQ,CAACK,GAAT,CAAa,CAACG,MAAD,EAASC,KAAT,kBACX;AAAI,IAAA,GAAG,EAAGA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BD,MAAM,CAACE,IAAtC,CADF,CADF,CAFJ,CANF,CAJF,CADF;AAmCD;;AAED,eAAeT,KAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport ContextApi from '../context/ContextApi';\nimport FilterByName from './FilterByName';\nimport FilterByNumericValues from './FilterByNumericValues';\n// import SortingColumns from './SortingColumns';\n\nconst auxiliar = [\n  'Bespin',\n  'Yavin IV',\n  'Hoth',\n  'Kamino',\n  'Endor',\n  'Coruscant',\n  'Alderaan',\n  'Dagobah',\n  'Naboo',\n  'Tatooine'];\n\nfunction Table() {\n  const { columns, dataFilter, setDataFilter } = useContext(ContextApi);\n  // const [sort, setSort] = useState(false);\n  // console.log(dataFilter);\n\n  // if (sort) {\n  //   setDataFilter(auxiliar);\n  // }\n\n  return (\n    <section>\n      <FilterByName />\n      <FilterByNumericValues />\n      {/* <SortingColumns /> */}\n      <table>\n        <thead>\n          <tr>\n            { columns.map((item) => <th key={ item }>{ item.replace('_', ' ') }</th>) }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            auxiliar.map((planet, index) => (\n              <tr key={ index }>\n                <td data-testid=\"planet-name\">{planet.name}</td>\n                {/* <td>{planet.rotation_period}</td>\n                <td>{planet.orbital_period}</td>\n                <td>{planet.diameter}</td>\n                <td>{planet.climate}</td>\n                <td>{planet.gravity}</td>\n                <td>{planet.terrain}</td>\n                <td>{planet.surface_water}</td>\n                <td>{planet.population}</td>\n                <td>{planet.films}</td>\n                <td>{planet.created}</td>\n                <td>{planet.edited}</td>\n                <td>{planet.url}</td> */}\n              </tr>))\n          }\n        </tbody>\n      </table>\n    </section>\n\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}