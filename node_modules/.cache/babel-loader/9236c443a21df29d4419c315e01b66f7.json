{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Trybe/projetos_trybe/sd-012-project-starwars-planets-search/src/components/FilterByNumericValues.jsx\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport ContextApi from '../context/ContextApi'; // import Input from './Input';\n\nconst compareOptions = ['maior que', 'menor que', 'igual a'];\nconst columnsOptions = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\nconst structure = {\n  column: 'population',\n  comparison: 'maior que',\n  value: '0'\n};\n\nconst FilterNumericValues = () => {\n  const {\n    data,\n    setDataFilter,\n    filters,\n    setFilters\n  } = useContext(ContextApi);\n  const [tempColumns, setTempColumns] = useState(columnsOptions);\n  const [filterByValue, setFilterByValue] = useState(structure);\n\n  const handleChange = ({\n    target: {\n      name,\n      value\n    }\n  }) => {\n    setFilterByValue({ ...filterByValue,\n      [name]: value\n    });\n  };\n\n  const onClickReset = () => {\n    setFilters({\n      filterByName: {\n        name: ''\n      },\n      filterByNumericValues: []\n    });\n  };\n\n  const onClick = () => {\n    setFilters({ ...filters,\n      filterByNumericValues: [...filters.filterByNumericValues, filterByValue]\n    });\n    setTempColumns(tempColumns.filter(item => item !== filterByValue.column));\n  };\n\n  useEffect(() => {\n    let aux = [...data];\n    const {\n      filterByNumericValues\n    } = filters;\n\n    const planetByValue = () => {\n      filterByNumericValues.forEach(({\n        column,\n        comparison,\n        value\n      }) => {\n        if (comparison === 'maior que') {\n          aux = aux.filter(planet => Number(planet[column]) > Number(value));\n          return setDataFilter(aux);\n        }\n\n        if (comparison === 'menor que') {\n          aux = aux.filter(planet => Number(planet[column]) < Number(value));\n          return setDataFilter(aux);\n        }\n\n        if (comparison === 'igual a') {\n          aux = aux.filter(planet => Number(planet[column]) === Number(value));\n          return setDataFilter(aux);\n        }\n      });\n    };\n\n    planetByValue();\n  }, [data, setDataFilter, filters]);\n  const {\n    value,\n    comparison,\n    column\n  } = filterByValue;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"select\", {\n    textlabel: \"column\",\n    name: \"column\",\n    \"data-testid\": \"column-filter\",\n    value: column,\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, tempColumns.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 40\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"select\", {\n    textlabel: \"comparison\",\n    name: \"comparison\",\n    \"data-testid\": \"comparison-filter\",\n    value: comparison,\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, compareOptions.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 43\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"input\", {\n    textlabel: \"value\",\n    name: \"value\",\n    \"data-testid\": \"value-filter\",\n    type: \"search\",\n    value: value,\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"filter\",\n    type: \"button\",\n    onClick: onClickReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"button-filter\",\n    type: \"button\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Filtrar\"));\n};\n\nexport default FilterNumericValues;","map":{"version":3,"sources":["/home/pedro/Trybe/projetos_trybe/sd-012-project-starwars-planets-search/src/components/FilterByNumericValues.jsx"],"names":["React","useContext","useState","useEffect","ContextApi","compareOptions","columnsOptions","structure","column","comparison","value","FilterNumericValues","data","setDataFilter","filters","setFilters","tempColumns","setTempColumns","filterByValue","setFilterByValue","handleChange","target","name","onClickReset","filterByName","filterByNumericValues","onClick","filter","item","aux","planetByValue","forEach","planet","Number","e","map","option"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport ContextApi from '../context/ContextApi';\n// import Input from './Input';\n\nconst compareOptions = ['maior que', 'menor que', 'igual a'];\nconst columnsOptions = [\n  'population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water'];\nconst structure = {\n  column: 'population',\n  comparison: 'maior que',\n  value: '0',\n};\n\nconst FilterNumericValues = () => {\n  const { data, setDataFilter, filters, setFilters } = useContext(ContextApi);\n  const [tempColumns, setTempColumns] = useState(columnsOptions);\n  const [filterByValue, setFilterByValue] = useState(structure);\n\n  const handleChange = ({ target: { name, value } }) => {\n    setFilterByValue({ ...filterByValue, [name]: value });\n  };\n\n  const onClickReset = () => {\n    setFilters({\n      filterByName: {\n        name: '',\n      },\n      filterByNumericValues: [],\n    });\n  };\n\n  const onClick = () => {\n    setFilters({\n      ...filters,\n      filterByNumericValues: [\n        ...filters.filterByNumericValues, filterByValue] });\n    setTempColumns(tempColumns.filter((item) => item !== filterByValue.column));\n  };\n\n  useEffect(() => {\n    let aux = [...data];\n    const { filterByNumericValues } = filters;\n    const planetByValue = () => {\n      filterByNumericValues.forEach(({ column, comparison, value }) => {\n        if (comparison === 'maior que') {\n          aux = aux.filter((planet) => Number(planet[column]) > Number(value));\n          return setDataFilter(aux);\n        }\n        if (comparison === 'menor que') {\n          aux = aux.filter((planet) => Number(planet[column]) < Number(value));\n          return setDataFilter(aux);\n        }\n        if (comparison === 'igual a') {\n          aux = aux.filter((planet) => Number(planet[column]) === Number(value));\n          return setDataFilter(aux);\n        }\n      });\n    };\n    planetByValue();\n  }, [data, setDataFilter, filters]);\n\n  const { value, comparison, column } = filterByValue;\n\n  return (\n    <>\n      <select\n        textlabel=\"column\"\n        name=\"column\"\n        data-testid=\"column-filter\"\n        value={ column }\n        onChange={ (e) => handleChange(e) }\n      >\n        {\n          tempColumns.map((option) => (<option key={ option }>{option}</option>))\n        }\n      </select>\n      <select\n        textlabel=\"comparison\"\n        name=\"comparison\"\n        data-testid=\"comparison-filter\"\n        value={ comparison }\n        onChange={ (e) => handleChange(e) }\n      >\n        {\n          compareOptions.map((option) => (<option key={ option }>{option}</option>))\n        }\n      </select>\n      <input\n        textlabel=\"value\"\n        name=\"value\"\n        data-testid=\"value-filter\"\n        type=\"search\"\n        value={ value }\n        onChange={ (e) => handleChange(e) }\n      />\n      <button\n        data-testid=\"filter\"\n        type=\"button\"\n        onClick={ onClickReset }\n      >\n        X\n      </button>\n      <button\n        data-testid=\"button-filter\"\n        type=\"button\"\n        onClick={ onClick }\n      >\n        Filtrar\n      </button>\n    </>\n  );\n};\n\nexport default FilterNumericValues;\n"]},"metadata":{},"sourceType":"module"}