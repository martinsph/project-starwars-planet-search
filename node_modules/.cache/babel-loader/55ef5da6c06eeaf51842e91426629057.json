{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Trybe/projetos_trybe/sd-012-project-starwars-planets-search/src/context/ApiProvider.js\";\nimport React, { useState, useEffect } from 'react'; // import fetchApi from '../services/fetchApi';\n\nimport PropTypes from 'prop-types';\nimport ContextApi from './ContextApi';\n\nfunction ApiProvider({\n  children\n}) {\n  const [data, setData] = useState([]);\n  const context = {\n    data,\n    setData\n  };\n\n  const fetchApi = async () => {\n    const url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n    const {\n      results\n    } = await fetch(url).then(response => response.json());\n    return results;\n  };\n\n  useEffect(() => {\n    const getResults = fetchApi();\n    const columnFilter = Object.keys(getResults[0]).filter(key => key !== 'residents');\n    setData(columnFilter);\n  }, []); // useEffect(() => {\n  //   (async () => {\n  //     const planets = await apiPlanets();\n  //     const sortedPlanets = [...planets]\n  //       .sort(({ name: a }, { name: b }) => a.localeCompare(b));\n  //     setData(sortedPlanets);\n  //   })();\n  // }, []);\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ContextApi.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nApiProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default ApiProvider;","map":{"version":3,"sources":["/home/pedro/Trybe/projetos_trybe/sd-012-project-starwars-planets-search/src/context/ApiProvider.js"],"names":["React","useState","useEffect","PropTypes","ContextApi","ApiProvider","children","data","setData","context","fetchApi","url","results","fetch","then","response","json","getResults","columnFilter","Object","keys","filter","key","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMQ,OAAO,GAAG;AACdF,IAAAA,IADc;AAEdC,IAAAA;AAFc,GAAhB;;AAKA,QAAME,QAAQ,GAAG,YAAY;AAC3B,UAAMC,GAAG,GAAG,gDAAZ;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAc,MAAMC,KAAK,CAACF,GAAD,CAAL,CAAWG,IAAX,CAAiBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAA9B,CAA1B;AACA,WAAOJ,OAAP;AACD,GAJD;;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,UAAU,GAAGP,QAAQ,EAA3B;AACA,UAAMQ,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYH,UAAU,CAAC,CAAD,CAAtB,EAA2BI,MAA3B,CAAmCC,GAAD,IAASA,GAAG,KAAK,WAAnD,CAArB;AACAd,IAAAA,OAAO,CAACU,YAAD,CAAP;AACD,GAJQ,EAIN,EAJM,CAAT,CAdiC,CAoBjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAGT,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,QADJ,CADF,CADF;AAOD;;AAEDD,WAAW,CAACkB,SAAZ,GAAwB;AACtBjB,EAAAA,QAAQ,EAAEH,SAAS,CAACqB,IAAV,CAAeC;AADH,CAAxB;AAIA,eAAepB,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import fetchApi from '../services/fetchApi';\nimport PropTypes from 'prop-types';\nimport ContextApi from './ContextApi';\n\nfunction ApiProvider({ children }) {\n  const [data, setData] = useState([]);\n\n  const context = {\n    data,\n    setData,\n  };\n\n  const fetchApi = async () => {\n    const url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n    const { results } = await fetch(url).then((response) => response.json());\n    return results;\n  };\n\n  useEffect(() => {\n    const getResults = fetchApi();\n    const columnFilter = Object.keys(getResults[0]).filter((key) => key !== 'residents');\n    setData(columnFilter);\n  }, []);\n\n  // useEffect(() => {\n  //   (async () => {\n  //     const planets = await apiPlanets();\n  //     const sortedPlanets = [...planets]\n  //       .sort(({ name: a }, { name: b }) => a.localeCompare(b));\n  //     setData(sortedPlanets);\n  //   })();\n  // }, []);\n\n  return (\n    <section>\n      <ContextApi.Provider value={ context }>\n        { children }\n      </ContextApi.Provider>\n    </section>\n  );\n}\n\nApiProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ApiProvider;\n"]},"metadata":{},"sourceType":"module"}