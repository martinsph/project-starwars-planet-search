{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Trybe/projetos_trybe/sd-012-project-starwars-planets-search/src/components/Table.jsx\";\nimport React, { useContext, useState } from 'react';\nimport ContextApi from '../context/ContextApi';\nimport FilterByName from './FilterByName';\nimport FilterByNumericValues from './FilterByNumericValues'; // import SortingColumns from './SortingColumns';\n\nimport auxiliaroptions from '../auxiliar';\nimport optionscolumn from '../optionscolumn';\n\nfunction Table() {\n  const {\n    columns,\n    dataFilter\n  } = useContext(ContextApi);\n  const [sort, setSort] = useState(false);\n  const auxiliar2 = !sort ? dataFilter : auxiliaroptions; // console.log(dataFilter);\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FilterByName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FilterByNumericValues, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-sort\" // onChange={ ({ target: { value } }) => setColumn(value) }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, optionscolumn.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 44\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ASC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Crescente\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"column-sort-input-asc\",\n    id: \"ASC\",\n    type: \"radio\",\n    value: \"ASC\",\n    name: \"sort-btn\" // onChange={ ({ target: { value } }) => setSort(value) }\n    ,\n    checked: \"checked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"DESC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Decrescente\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"column-sort-input-desc\",\n    id: \"DESC\",\n    type: \"radio\",\n    value: \"DESC\",\n    name: \"sort-btn\",\n    onChange: setSort(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"column-sort-button\",\n    type: \"button\",\n    onClick: setSort(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Ordenar\")), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, columns.map(item => /*#__PURE__*/React.createElement(\"th\", {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 37\n    }\n  }, item.replace('_', ' '))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, auxiliar2.map((planet, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-testid\": \"planet-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, planet.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, planet.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, planet.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, planet.diameter), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, planet.climate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, planet.gravity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, planet.terrain), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, planet.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, planet.population), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, planet.films), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, planet.created), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, planet.edited), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, planet.url))))));\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/pedro/Trybe/projetos_trybe/sd-012-project-starwars-planets-search/src/components/Table.jsx"],"names":["React","useContext","useState","ContextApi","FilterByName","FilterByNumericValues","auxiliaroptions","optionscolumn","Table","columns","dataFilter","sort","setSort","auxiliar2","map","option","item","replace","planet","index","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport ContextApi from '../context/ContextApi';\nimport FilterByName from './FilterByName';\nimport FilterByNumericValues from './FilterByNumericValues';\n// import SortingColumns from './SortingColumns';\nimport auxiliaroptions from '../auxiliar';\nimport optionscolumn from '../optionscolumn';\n\nfunction Table() {\n  const { columns, dataFilter } = useContext(ContextApi);\n  const [sort, setSort] = useState(false);\n  const auxiliar2 = (!sort) ? dataFilter : auxiliaroptions;\n\n  // console.log(dataFilter);\n\n  return (\n    <section>\n      <FilterByName />\n      <FilterByNumericValues />\n      {/* <SortingColumns /> */}\n      <form>\n        <select\n          data-testid=\"column-sort\"\n          // onChange={ ({ target: { value } }) => setColumn(value) }\n        >\n          {\n            optionscolumn.map((option) => (<option key={ option }>{option}</option>))\n          }\n        </select>\n        <label htmlFor=\"ASC\">\n          Crescente\n          <input\n            data-testid=\"column-sort-input-asc\"\n            id=\"ASC\"\n            type=\"radio\"\n            value=\"ASC\"\n            name=\"sort-btn\"\n            // onChange={ ({ target: { value } }) => setSort(value) }\n            checked=\"checked\"\n          />\n        </label>\n        <label htmlFor=\"DESC\">\n          Decrescente\n          <input\n            data-testid=\"column-sort-input-desc\"\n            id=\"DESC\"\n            type=\"radio\"\n            value=\"DESC\"\n            name=\"sort-btn\"\n            onChange={ setSort(true) }\n          />\n        </label>\n        <button\n          data-testid=\"column-sort-button\"\n          type=\"button\"\n          onClick={ setSort(true) }\n        >\n          Ordenar\n        </button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            { columns.map((item) => <th key={ item }>{ item.replace('_', ' ') }</th>) }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            auxiliar2.map((planet, index) => (\n              <tr key={ index }>\n                <td data-testid=\"planet-name\">{planet.name}</td>\n                <td>{planet.rotation_period}</td>\n                <td>{planet.orbital_period}</td>\n                <td>{planet.diameter}</td>\n                <td>{planet.climate}</td>\n                <td>{planet.gravity}</td>\n                <td>{planet.terrain}</td>\n                <td>{planet.surface_water}</td>\n                <td>{planet.population}</td>\n                <td>{planet.films}</td>\n                <td>{planet.created}</td>\n                <td>{planet.edited}</td>\n                <td>{planet.url}</td>\n              </tr>))\n          }\n        </tbody>\n      </table>\n    </section>\n\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}