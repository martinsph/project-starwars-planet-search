{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Trybe/projetos_trybe/sd-012-project-starwars-planets-search/src/components/FilterByNumericValues.jsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport ContextApi from '../context/ContextApi';\nimport Input from './Input';\nconst compareOptions = ['maior que', 'menor que', 'igual a'];\nconst columnsOptions = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n\nfunction FilterNumericValues() {\n  const {\n    filters,\n    setFilters,\n    columns,\n    setColumns\n  } = useContext(ContextApi);\n  const {\n    filterByNumericValues\n  } = filters;\n  const [numericFilter, setNumericFilter] = useState({});\n  const {\n    column,\n    comparison,\n    value\n  } = numericFilter;\n\n  function handleChange({\n    target\n  }) {\n    setNumericFilter({ ...numericFilter,\n      [target.name]: target.value\n    });\n  }\n\n  function onClick() {\n    setFilters({ ...filters,\n      filterByNumericValues: [...filterByNumericValues, numericFilter]\n    }); // console.log(column);\n\n    setColumns(columns.filter(col => !column.includes(col)));\n  }\n\n  useEffect(() => {\n    setNumericFilter({\n      column: columns[0],\n      comparions: 'maior que',\n      value: '0'\n    });\n  }, [columns]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"select\", {\n    textlabel: \"column\",\n    id: \"column-filter\",\n    value: column,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, columnsOptions.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 43\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"select\", {\n    textlabel: \"comparison\",\n    id: \"comparison-filter\",\n    value: comparison,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, compareOptions.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 43\n    }\n  }, option))), /*#__PURE__*/React.createElement(Input, {\n    textlabel: \"value\",\n    name: \"value\",\n    id: \"value-filter\",\n    type: \"number\",\n    value: value,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"button-filter\",\n    type: \"button\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Filtrar\"));\n}\n\nexport default FilterNumericValues; // useEffect(() => {\n//   const planetByValues = () => {\n//     let aux = [...data];\n//     // console.log(allData);\n//     filterByNumericValues.forEach(() => {\n//       switch (comparison) {\n//       case 'maior que':\n//         aux = aux.filter((item) => (\n//           Number(item[column]) > value));\n//         setDataFilter(aux);\n//         break;\n//       case 'menor que':\n//         aux = aux.filter((item) => (\n//           Number(item[column]) < value));\n//         setDataFilter(aux);\n//         break;\n//       case 'igual a':\n//         aux = aux.filter((item) => (\n//           Number(item[column]) === value));\n//         setDataFilter(aux);\n//         break;\n//       default:\n//         break;\n//       }\n//     });\n//   };\n//   planetByValues();\n// }, [data, filters, setDataFilter, column, comparison, filterByNumericValues, value]);","map":{"version":3,"sources":["/home/pedro/Trybe/projetos_trybe/sd-012-project-starwars-planets-search/src/components/FilterByNumericValues.jsx"],"names":["React","useContext","useEffect","useState","ContextApi","Input","compareOptions","columnsOptions","FilterNumericValues","filters","setFilters","columns","setColumns","filterByNumericValues","numericFilter","setNumericFilter","column","comparison","value","handleChange","target","name","onClick","filter","col","includes","comparions","map","option"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport ContextApi from '../context/ContextApi';\nimport Input from './Input';\n\nconst compareOptions = ['maior que', 'menor que', 'igual a'];\nconst columnsOptions = ['population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water'];\n\nfunction FilterNumericValues() {\n  const {\n    filters,\n    setFilters,\n    columns,\n    setColumns,\n  } = useContext(ContextApi);\n  const { filterByNumericValues } = filters;\n  const [numericFilter, setNumericFilter] = useState({});\n  const { column, comparison, value } = numericFilter;\n\n  function handleChange({ target }) {\n    setNumericFilter({\n      ...numericFilter,\n      [target.name]: target.value,\n    });\n  }\n\n  function onClick() {\n    setFilters({\n      ...filters,\n      filterByNumericValues: [\n        ...filterByNumericValues,\n        numericFilter,\n      ],\n    });\n    // console.log(column);\n    setColumns(columns.filter((col) => !column.includes(col)));\n  }\n\n  useEffect(() => {\n    setNumericFilter({\n      column: columns[0],\n      comparions: 'maior que',\n      value: '0',\n    });\n  }, [columns]);\n\n  return (\n    <>\n      <select\n        textlabel=\"column\"\n        id=\"column-filter\"\n        value={ column }\n        onChange={ handleChange }\n      >\n        {\n          columnsOptions.map((option) => (<option key={ option }>{option}</option>))\n        }\n      </select>\n      <select\n        textlabel=\"comparison\"\n        id=\"comparison-filter\"\n        value={ comparison }\n        onChange={ handleChange }\n      >\n        {\n          compareOptions.map((option) => (<option key={ option }>{option}</option>))\n        }\n      </select>\n      <Input\n        textlabel=\"value\"\n        name=\"value\"\n        id=\"value-filter\"\n        type=\"number\"\n        value={ value }\n        onChange={ handleChange }\n      />\n      <button\n        data-testid=\"button-filter\"\n        type=\"button\"\n        onClick={ onClick }\n      >\n        Filtrar\n      </button>\n    </>\n  );\n}\n\nexport default FilterNumericValues;\n\n// useEffect(() => {\n//   const planetByValues = () => {\n//     let aux = [...data];\n//     // console.log(allData);\n//     filterByNumericValues.forEach(() => {\n//       switch (comparison) {\n//       case 'maior que':\n//         aux = aux.filter((item) => (\n//           Number(item[column]) > value));\n//         setDataFilter(aux);\n//         break;\n//       case 'menor que':\n//         aux = aux.filter((item) => (\n//           Number(item[column]) < value));\n//         setDataFilter(aux);\n//         break;\n//       case 'igual a':\n//         aux = aux.filter((item) => (\n//           Number(item[column]) === value));\n//         setDataFilter(aux);\n//         break;\n//       default:\n//         break;\n//       }\n//     });\n//   };\n//   planetByValues();\n// }, [data, filters, setDataFilter, column, comparison, filterByNumericValues, value]);\n"]},"metadata":{},"sourceType":"module"}